%Test function for ellipj.m

%!test
% Test error handling
%! try
%!     ellipj(0, 2); % module out of range
%!     assert(false, "Module out of range didn't throw an error.");
%! catch err
    % Verify that the error message contains the expected string
%!     assert(~isempty(strfind(err.message, 'M must be in the range 0 <= M <= 1')), ...
%!         'Unexpected error message: %s', err.message);
%! end

%!test
%! try
%!     ellipj(0, 0.5i); % complex input
%!     assert(false, "Complex input didn't throw an error.");
%! catch err
    % Verify that the error message contains the expected string
%!     assert(~isempty(strfind(err.message, 'Input arguments must be real. Use ELLIPJI for complex arguments')), ...
%!         'Unexpected error message: %s', err.message);
%! end

% Test some simple inputs
%!test
%! clear
%! [Sn,Cn,Dn,Am] = ellipj(0, 0.5);
%! assert(abs(Sn - 0) < 1e-12, 'Sn value is incorrect.');
%! assert(abs(Cn - 1) < 1e-12, 'Cn value is incorrect.');
%! assert(abs(Dn - 1) < 1e-12, 'Dn value is incorrect.');
%! assert(abs(Am - 0) < 1e-12, 'Am value is incorrect.');

% Test the output of ellipj for some inputs
%!test
%! clear
%! [Sn,Cn,Dn,Am] = ellipj(1000*pi/e, 0.5);
%! assert(abs(Sn - (-0.893107245788960)) < 1e-10, 'Unexpected value for K');
%! assert(abs(Cn - 0.449843803468780) < 1e-10, 'Unexpected value for E');
%! assert(abs(Dn - 0.775357803700736) < 1e-10, 'Unexpected value for Z');
%! assert(abs(Am - 979.0727020334380) < 1e-10, 'Unexpected value for Z');
    
% Test a range of inputs
%!test
%! clear
%! [phi,alpha] = meshgrid(0:15:90, 0:20:90); 
%! [Sn,Cn,Dn,Am] = ellipj(pi/180*phi, sin(pi/180*alpha).^2);
%! expectedSn = [
%!     0   0.258819045102521   0.500000000000000   0.707106781186547   0.866025403784439   0.965925826289068   1.000000000000000
%!     0   0.258485846933824   0.497706885957617   0.701191670697569   0.856917551601736   0.957435470313559   0.998930065167356
%!     0   0.257643148029390   0.491910673808747   0.686101163281922   0.832760104716736   0.931740623632570   0.986257941725294
%!     0   0.256686588523966   0.485337929842327   0.668765263011419   0.803518357767476   0.895471762681560   0.953740968539957
%!     0   0.256063227340115   0.481058968307780   0.657362920250267   0.783511105160983   0.868007911876281   0.922112134755733
%! ];
%! assert(norm(Sn-expectedSn) < 1e-12, 'Sn value is incorrect.')
%! expectedCn = [
%!     1.000000000000000e+00   9.659258262890683e-01   8.660254037844387e-01   7.071067811865476e-01   5.000000000000001e-01   2.588190451025207e-01   6.123233995736766e-17
%!     1.000000000000000e+00   9.660150448802045e-01   8.673452920667593e-01   7.129728192184835e-01   5.154534991217790e-01   2.886473976765673e-01   4.624635017752995e-02
%!     1.000000000000000e+00   9.662401400653494e-01   8.706456736198857e-01   7.275061468765697e-01   5.536340018389138e-01   3.631245107023065e-01   1.652128093816774e-01
%!     1.000000000000000e+00   9.664946949010781e-01   8.743266516905247e-01   7.434736195651245e-01   5.952799750795065e-01   4.451183238645416e-01   3.006296141907273e-01
%!     1.000000000000000e+00   9.666600351748098e-01   8.766882393477478e-01   7.535741443813213e-01   6.213777821015289e-01   4.965503649381184e-01   3.869227454366375e-01
%! ];
%! assert(norm(Cn-expectedCn) < 1e-12, 'Cn value is incorrect.')
%! expectedDn = [
%!     1.000000000000000   1.000000000000000   1.000000000000000   1.000000000000000   1.000000000000000   1.000000000000000   1.000000000000000
%!     1.000000000000000   0.996084402831102   0.985405086075562   0.970816956928179   0.956086982289571   0.944864274158146   0.939825731105263
%!     1.000000000000000   0.986191353863528   0.948694523992923   0.897498589139304   0.844669691993763   0.800815347517021   0.773370440262088
%!     1.000000000000000   0.974978972313735   0.907378267533598   0.815208419511201   0.718170374317956   0.631345976212714   0.563723002631921
%!     1.000000000000000   0.967682154467076   0.880659052891909   0.762170705697972   0.636098566344953   0.518923108487193   0.418746481137913
%! ];
%! assert(norm(Dn-expectedDn) < 1e-12, 'Dn value is incorrect.')
%! expectedAm = [
%!     0   0.261799387799149   0.523598775598299   0.785398163397448   1.047197551196598   1.308996938995747   1.570796326794897
%!     0   0.261454451605330   0.520952933355633   0.777067537031822   1.029259540311595   1.277982525206070   1.524533476028350
%!     0   0.260582207755167   0.514282943954731   0.756116234361404   0.984074582906969   1.199177202994081   1.404822544814828
%!     0   0.259592357093799   0.506749629200109   0.732546776612366   0.933182286603689   1.109489934513660   1.265443589210165
%!     0   0.258947441141085   0.501862231566958   0.717313966340025   0.900296375458400   1.051176287337344   1.173504260529473
%! ];
%! assert(norm(Am-expectedAm) < 1e-12, 'Dn value is incorrect.')
